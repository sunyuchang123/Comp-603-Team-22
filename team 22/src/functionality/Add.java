/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package functionality;
import View.PanelView;
import java.awt.Color;
import javax.swing.JOptionPane;
/**
 *
 * @author yucha
 */
public class Add extends javax.swing.JPanel{
    PanelView GUI;

    /**
     * Constructor for Add. Initializes the form components.
     */
    public Add() {
        initComponents();
    }

      /**
     * Set the connection to parent JFrame.
     * 
     * @param GUI The parent GUI.
     */
    public void setGUI(PanelView GUI) {
        this.GUI = GUI;
    }
    /**
     * Set input based on the inventory type.
     * 
     * @param inventory The type of inventory.
     */
    public void setInput(String inventory) {
        if ("inventory".equals(inventory)) {
            other.setText("Code: ");
            CodeField.setVisible(true);
        }
    }
    
     //get name input
    public String getName() {
        return NameField.getText().trim();
    }

    public int getQuantity() {
        try {
            return Integer.parseInt(QuantityField.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    public Double getPrice() {
        return Double.parseDouble(PriceField.getText());
    }
    
    public String getCode() {
        
        return CodeField.getText().trim();
    }
    
     /**
     * Clear all the input fields.
     */
    public void clearInput() {
        NameField.setText("");
        QuantityField.setText("");
        PriceField.setText("");
        CodeField.setText("");
    }

    /**
     * Validate all the input fields.
     * 
     * @return true if input is valid, otherwise false.
     */
    private boolean validateInput() {
        if (GUI.checkItemExists(getName())) {
            JOptionPane.showMessageDialog(null, "The product already exists.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (getName().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The product name cannot be empty!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (getQuantity() < 0) {
            JOptionPane.showMessageDialog(null, "Please enter a value equal or greater than 0.");
            return false;
        }

        try {
            double price = getPrice();
            if (price <= 0) {
                JOptionPane.showMessageDialog(null, "Please enter a value equal or greater than 0.", "ERROR", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a number for price", "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

     /**
     * Send validated input to the GUI to be added to the model.
     */
   private void InputCall() {
    String otherInput = "";
    if ("Code: ".equals(other.getText())) {
        try {
            otherInput = getCode();
            Integer.parseInt(otherInput);// Throws exception if not a valid integer
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input");
            return; 
        }
    }

    GUI.recieveNewProduct(getName(), getQuantity(), getPrice(), otherInput);
}

    /**
    * Initializes the form. Auto-generated by the Form Editor; do not modify.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        ConfirmButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        Name = new javax.swing.JLabel();
        QuantityLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        other = new javax.swing.JLabel();
        QuantityField = new javax.swing.JTextField();
        CodeField = new javax.swing.JTextField();

        setBackground(Color.BLACK);
        setMinimumSize(new java.awt.Dimension(210, 180));
        setPreferredSize(new java.awt.Dimension(210, 180));
        setLayout(null);

        NameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(NameField);
        NameField.setBounds(80, 10, 100, 23); //name text field location

        PriceField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        PriceField.setMinimumSize(new java.awt.Dimension(30, 24));
        PriceField.setPreferredSize(new java.awt.Dimension(30, 24));
        add(PriceField);
        PriceField.setBounds(80, 70, 100, 24);//price text field location

        ConfirmButton.setBackground(new java.awt.Color(221, 221, 221));
        ConfirmButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ConfirmButton.setText("CONFIRM");
        ConfirmButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ConfirmButton.setMaximumSize(new java.awt.Dimension(63, 23));
        ConfirmButton.setMinimumSize(new java.awt.Dimension(63, 23));
        ConfirmButton.setPreferredSize(new java.awt.Dimension(63, 23));
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmAddActionPerformed(evt);
            }
        });
        add(ConfirmButton);
        ConfirmButton.setBounds(7, 150, 90, 23);//confirm location

        AddButton.setBackground(new java.awt.Color(221, 221, 221));
        AddButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); 
        AddButton.setText("CANCEL");
        AddButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddButton.setMaximumSize(new java.awt.Dimension(63, 23));
        AddButton.setMinimumSize(new java.awt.Dimension(63, 23));
        AddButton.setPreferredSize(new java.awt.Dimension(63, 23));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddActionPerformed(evt);
            }
        });
        add(AddButton);
        AddButton.setBounds(110, 150, 90, 23);//cancel button locatiom

        Name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Name.setText("Name: ");
        Name.setMinimumSize(new java.awt.Dimension(30, 24));
        Name.setPreferredSize(new java.awt.Dimension(30, 24));
        Name.setForeground(Color.WHITE);
        add(Name);
        Name.setBounds(-10, 10, 80, 20); //name text locatiomn

        QuantityLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        QuantityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        QuantityLabel.setText("Quantity: ");
        QuantityLabel.setMinimumSize(new java.awt.Dimension(30, 24));
        QuantityLabel.setPreferredSize(new java.awt.Dimension(30, 24));
        QuantityLabel.setForeground(Color.WHITE);
        add(QuantityLabel);
        QuantityLabel.setBounds(-10, 40, 80, 20); //quantity text location
        
        QuantityField.setFont(new java.awt.Font("Times New Roman", 0, 14));
        add(QuantityField);
        QuantityField.setBounds(80, 40, 100, 24);

        priceLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        priceLabel.setText("Price: ");
        priceLabel.setMinimumSize(new java.awt.Dimension(30, 24));
        priceLabel.setPreferredSize(new java.awt.Dimension(30, 24));
        priceLabel.setForeground(Color.WHITE);
        add(priceLabel);
        priceLabel.setBounds(-20, 70, 80, 20);//price text location

        other.setFont(new java.awt.Font("Times New Roman", 1, 14)); 
        other.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        other.setText("Other: ");
        other.setMinimumSize(new java.awt.Dimension(30, 24));
        other.setPreferredSize(new java.awt.Dimension(30, 24));
        other.setForeground(Color.WHITE);
        add(other);
        other.setBounds(-20, 100, 80, 20); //Code text location
        
        CodeField.setFont(new java.awt.Font("Times New Roman", 0, 14));
        add(CodeField);
        CodeField.setBounds(80, 100, 100, 24);
    }

    private void btnConfirmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmAddActionPerformed
        if (validateInput()) {
            InputCall();
            clearInput();
            GUI.VIsual();
        }
    }

    private void btnCancelAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddActionPerformed
        clearInput();
        GUI.VIsual();
    }
    
     public javax.swing.JLabel other;
     private javax.swing.JLabel Name;
     public javax.swing.JTextField CodeField; 
     private javax.swing.JLabel priceLabel;
     public javax.swing.JTextField PriceField;
     private javax.swing.JLabel QuantityLabel;
     public javax.swing.JTextField QuantityField;
     public javax.swing.JTextField NameField;
     private javax.swing.JButton AddButton;
     private javax.swing.JButton ConfirmButton;
}
